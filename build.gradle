plugins {
    id 'java'
    id 'application'
    id 'org.beryx.jlink' version '2.24.4'
}

version '0.1'
group 'org.example'
sourceCompatibility = '17'
targetCompatibility = '17'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }  // Added JitPack repository
}

ext {
    junitVersion = '5.8.1'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'bl00dy_c0d3_.echovr_installer'
    mainClass = 'bl00dy_c0d3_.echovr_installer.EchoVRInstaller'
    applicationDefaultJvmArgs = ['--add-modules', 'jdk.zipfs']
}

dependencies {
    implementation 'org.openjfx:javafx-controls:17.0.1'
    implementation 'org.openjfx:javafx-fxml:17.0.1'
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Main-Class': application.mainClass
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

// Task to copy libjpeg.so.62
task copyLibjpeg(type: Copy) {
    from 'src/main/resources/libjpeg.so.62'
    into "$buildDir/jpackage/EchoVR_Installer/lib/runtime/lib/"
}

jlink {
    options = ['--add-modules', 'jdk.zipfs']
    jpackage {
        installerName = 'Echo_VR_Installer'
        def os = org.gradle.internal.os.OperatingSystem.current()

        if (os.isWindows()) {
            appVersion = '0.2'
            icon = 'C:\\Users\\Marcel\\Documents\\Java\\EchoVR_Installer\\icon.ico'  // Update path
            installerOptions = [
                    '--app-version', '0.2',
                    '--vendor', 'bl00dy-c0d3',
                    '--name', 'Echo_VR_Installer',
                    '--install-dir', 'EchoVRInstaller',
                    '--icon', 'C:\\Users\\Marcel\\Documents\\Java\\EchoVR_Installer\\icon.ico',  // Update path
                    '--win-dir-chooser',
                    '--win-shortcut',
                    '--win-menu',
                    '--win-menu-group', 'EchoVRInstaller',
            ]
        } else if (os.isMacOsX()) {
            appVersion = '1.1'
            installerOptions = [
                    '--mac-package-identifier', 'IhateApple',
            ]
        } else {
            appVersion = '0.2'
            icon = 'icon.png'  // Update path if needed
            // Ensure copyLibjpeg runs after jpackage
            tasks.named('jpackage').configure {
                finalizedBy(copyLibjpeg)
            }

            // Ensure build depends on jlink
            tasks.named('build').configure {
                dependsOn(jlink)
            }
        }
    }
}
